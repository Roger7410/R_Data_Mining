library(ISLR)
summary(Auto)
attach(Auto)
head(Auto)
length(mpg)
mpg01 = rep(0, 392)
mpg01[mpg > median(mpg)] = 1
length(mpg)
mpg01 <- rep(0, 392)
mpg01[mpg > median(mpg)] <- 1
pairs(NewAuto)
length(mpg)
length(mpg)
mpg01<-rep(0,392)
mpg01[mpg>median(mpg)]<-1
NewAuto<-data.frame(Auto,mpg01)
#b
pairs(NewAuto)
cor(NewAuto[-9])
cor(NewAuto[,-9])
cor(NewAuto[,-9])
trainSet = (year%%2 == 0)
trainSet
sum(trainSet)
sum(trainSet == T)
sum(trainSet == F)
testSet = !trainSet
testSet#392
sum(testSet == T)#210
sum(testSet == F)#182
trainSet#392
sum(trainSet == T)#210
sum(trainSet == F)#182
testSet = !trainSet
testSet#392
sum(testSet == T)#210
sum(testSet == F)#182
trainSet#392
sum(trainSet)
trainSet#392
sum(trainSet == T)#210
sum(trainSet == F)#182
testSet = !trainSet
trainSet#392
testSet = !trainSet
testSet = !trainSet
testSet#392
sum(testSet == F)#210
sum(testSet == F)#182
sum(testSet == T)#210
sum(testSet == F)#182
NewAuto.trainSet = NewAuto[trainSet, ]
NewAuto.trainSet
head(NewAuto.trainSet)
sum(NewAuto.trainSet)
sum(NewAuto.trainSet$mpg)
sum(NewAuto.trainSet$origin)
NewAuto.trainSet
dim(NewAuto.trainSet)
NewAuto.trainSet
head(NewAuto.trainSet)
cor(NewAuto[,-10])
cor(NewAuto[,-9])
#c
cor(NewAuto[,-9])
cor(NewAuto[,-0])
cor(NewAuto[,-9])
NewAuto.testSet = NewAuto[testSet, ]
mpg01.testSet = mpg01[testSet]
mpg01.testSet
mpg01
lda.fit = lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto,
subset = train)
libiary(MASS)
library(MASS)
lda.fit = lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto,
subset = train)
lda.fit = lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto,
set = trainSet)
lda.pred = predict(lda.fit, NewAuto.testSet)
mean(lda.pred$class != mpg01.test)
mean(lda.pred$class != mpg01.testSet)
qda.fit = qda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto,
set = trainSet)
qda.pred = predict(qda.fit, NewAuto.testSet)
mean(qda.pred$class != mpg01.testSet)
glm.fit = glm(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto,
family = binomial, set = trainSet)
lda.fit = lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = NewAuto,
set = trainSet)
lda.pred = predict(lda.fit, NewAuto.testSet)
mean(lda.pred$class != mpg01.testSet)
#e
qda.fit = qda(mpg01 ~ cylinders + weight + displacement + horsepower, data = NewAuto,
set = trainSet)
qda.pred = predict(qda.fit, NewAuto.testSet)
mean(qda.pred$class != mpg01.testSet)
#f
glm.fit = glm(mpg01 ~ cylinders + weight + displacement + horsepower, data = NewAuto,
family = binomial, set = trainSet)
glm.fit = glm(mpg01 ~ cylinders + weight + displacement + horsepower, data = NewAuto,
family = binomial, subset = trainSet)
qda.fit = qda(mpg01 ~ cylinders + weight + displacement + horsepower, data = NewAuto,
subset = trainSet)
qda.pred = predict(qda.fit, NewAuto.testSet)
mean(qda.pred$class != mpg01.testSet)
lda.fit = lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = NewAuto,
subset = trainSet)
lda.pred = predict(lda.fit, NewAuto.testSet)
mean(lda.pred$class != mpg01.testSet)
#e
qda.fit = qda(mpg01 ~ cylinders + weight + displacement + horsepower, data = NewAuto,
subset = trainSet)
qda.pred = predict(qda.fit, NewAuto.testSet)
mean(qda.pred$class != mpg01.testSet)
#f
glm.fit = glm(mpg01 ~ cylinders + weight + displacement + horsepower, data = NewAuto,
family = binomial, subset = trainSet)
glm.probs = predict(glm.fit, NewAuto.testSet, type = "response")
glm.pred = rep(0, length(glm.probs))
glm.pred[glm.probs > 0.5] = 1
mean(glm.pred != mpg01.test)
mean(glm.pred != mpg01.testSet)
length(glm.probs)
glm.pred = rep(0, 182)
glm.pred[glm.probs > 0.5] = 1
mean(glm.pred != mpg01.testSet)
glm.fit = glm(mpg01 ~ cylinders + weight + displacement + horsepower, data = NewAuto,
family = binomial, subset = trainSet)
glm.probs = predict(glm.fit, NewAuto.testSet, type = "r")
length(glm.probs)
glm.pred = rep(0, 182)
glm.pred[glm.probs > 0.5] = 1
mean(glm.pred != mpg01.testSet)
glm.fit = glm(mpg01 ~ cylinders + weight + displacement + horsepower, data = NewAuto,
family = binomial, subset = trainSet)
glm.probs = predict(glm.fit, NewAuto.testSet)
length(glm.probs)
glm.pred = rep(0, 182)
glm.pred[glm.probs > 0.5] = 1
mean(glm.pred != mpg01.testSet)
glm.fit = glm(mpg01 ~ cylinders + weight + displacement + horsepower, data = NewAuto,
family = binomial, subset = trainSet)
glm.probs = predict(glm.fit, NewAuto.testSet, type="response")
length(glm.probs)
glm.pred = rep(0, 182)
glm.pred[glm.probs > 0.5] = 1
mean(glm.pred != mpg01.testSet)
trainSet.X = cbind(cylinders, weight, displacement, horsepower)[trainSet, ]
testSet.X = cbind(cylinders, weight, displacement, horsepower)[testSet, ]
trainSet.mpg01 = mpg01[trainSet]
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 1)
mean(knn.pred != mpg01.testSet)
library(class)
trainSet.X = cbind(cylinders, weight, displacement, horsepower)[trainSet, ]
testSet.X = cbind(cylinders, weight, displacement, horsepower)[testSet, ]
trainSet.mpg01 = mpg01[trainSet]
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 1)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 1)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 2)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 10)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 100)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 1000)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 200)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 110)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 3)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 5)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 1)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 2)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 5)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 10)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 100)
mean(knn.pred != mpg01.testSet)
knn.pred = knn(trainSet.X, testSet.X, trainSet.mpg01, k = 110)
mean(knn.pred != mpg01.testSet)
set.seed(1)
set.seed(1)
y=rnorm(100)
x=rnorm(100)
y=x-2*x^2+rnorm(100)
rnorm(1)
rnorm(2)
plot(x,y)
library(boot)
boot
library(boot)
xy = data.frame(x, y)
set.seed(1)
glm.fit = glm(y ~ x)
cv.glm(xy, glm.fit)$delta
glm.fit = glm(y ~ poly(x,2))
cv.glm(xy, glm.fit)$delta
glm.fit = glm(y ~ poly(x,3))
cv.glm(xy, glm.fit)$delta
glm.fit = glm(y ~ poly(x,4))
cv.glm(xy, glm.fit)$delta
set.seed(2)
glm.fit = glm(y ~ x)
cv.glm(xy, glm.fit)$delta
glm.fit = glm(y ~ poly(x,2))
cv.glm(xy, glm.fit)$delta
glm.fit = glm(y ~ poly(x,3))
cv.glm(xy, glm.fit)$delta
glm.fit = glm(y ~ poly(x,4))
cv.glm(xy, glm.fit)$delta
summary(glm.fit)
x = matrix(rnorm(20*3*50, mean=0, sd=0.001))
x = matrix(rnorm(20*3*50, mean=0, sd=0.001))
View(x)
x = matrix(rnorm(20*3*50, mean=0, sd=0.001), ncol=50)
View(x)
View(x)
pca.out=prcomp(x)
summary(pac.out)
summary(pca.out)
pac.out$x[,1:2]
pca.out$x[,1:2]
plot(pca.out$x[,1:2], col=2:4, xlab="Z1", ylab="Z2", pch=19)
x[1:20, 2] = 1
x[21:40, 1] = 2
x[21:40, 2] = 2
x[41:60, 1] = 1
#b
pca.out=prcomp(x)
summary(pca.out)
pca.out$x[,1:2]
plot(pca.out$x[,1:2], col=2:4, xlab="Z1", ylab="Z2", pch=19)
View(x)
x = matrix(rnorm(20*3*50, mean=0, sd=0.001), ncol=50)
x[1:20, 2] = 0
x[21:40, 1] = 1
x[21:40, 2] = 1
x[41:60, 1] = 0
#b
pca.out=prcomp(x)
summary(pca.out)
pca.out$x[,1:2]
plot(pca.out$x[,1:2], col=2:4, xlab="Z1", ylab="Z2", pch=19)
x = matrix(rnorm(20*3*50, mean=0, sd=0.001), ncol=50)
x[1:20, 2] = 1
x[21:40, 1] = 10
x[21:40, 2] = 10
x[41:60, 1] = 1
#b
pca.out=prcomp(x)
summary(pca.out)
pca.out$x[,1:2]
plot(pca.out$x[,1:2], col=2:4, xlab="Z1", ylab="Z2", pch=19)
plot(pca.out$x[,1:2], col=2:4, pch=19)
plot(pca.out$x[,1:2], col=2:4)
plot(pca.out$x[,1:2], col=1:3)
plot(pca.out$x[,1:2], col=3)
plot(pca.out$x[,1:2], col=1:3)
pca_result=prcomp(x)
summary(pca_result)
pca_result$x[,1:2]
plot(pca_result$x[,1:2], col=1:3)
km.out = kmeans(x, 3, nstart=20)
km_result = kmeans(x, 3, nstart=20)
km_result
table(km_result$cluster, c(rep(1,20), rep(2,20), rep(3,20)))
km_result = kmeans(x, 2, nstart=20)
km_result$cluster
table(km_result$cluster, c(rep(1,20), rep(2,20), rep(3,20)))
km.out = kmeans(x, 4, nstart=20)
table(km_result$cluster, c(rep(1,20), rep(2,20), rep(3,20)))
km_result = kmeans(x, 4, nstart=20)
table(km_result$cluster, c(rep(1,20), rep(2,20), rep(3,20)))
km_result = kmeans(pca.out$x[,1:2], 3, nstart=20)
table(km_result$cluster, c(rep(1,20), rep(2,20), rep(3,20)))
km_result = kmeans(scale(x), 3, nstart=20)
table(km_result$cluster, c(rep(1,20), rep(2,20), rep(3,20)))
newiris<-iris
newiris<-iris
newiris
newiris$Species<-NULL
newiris
newiris<-iris
newiris
newiris$Species<-NULL
set.seed(2)
x=matrix(rnorm(100),ncol=2)
x[1:25,1]=x[1:25,1]+3
v<-rep(14,25)
w<-rep(15,25)
z<-c(v,w)
df<-data.frame(x)
df<-cbind(df,z)
km.out<-kmeans(df,2,nstart=20)
df<-cbind(df,km=km.out$cluster)
plot(df$X1,df$X2,pch=df$z+2,col=df$km+2,cex=1.5)
table(true=df$z,clus=df$km)
newiris
set.seed(2)
df<-data.frame(newiris)
df
km.out<-kmeans(df,3,nstart=20)
df<-cbind(df,km=km.out$cluster)
plot(df$X1,df$X2,pch=df$z+2,col=df$km+2,cex=1.5)
table(true=df$z,clus=df$km)
plot(df$X1,df$X2,pch=10, col=1:3,cex=1.5)
plot(df,pch=10, col=1:3,cex=1.5)
newiris<-iris
newiris
newiris$Species<-NULL
set.seed(2)
df<-data.frame(newiris)
df
km.out<-kmeans(df,3,nstart=20)
df<-cbind(df,km=km.out$cluster)
plot(df,pch=10, col=1:3,cex=1.5)
table(true=df,clus=df$km)
newiris<-iris
newiris
newiris$Species<-NULL
set.seed(2)
df<-data.frame(newiris)
df
km.out<-kmeans(df,3,nstart=20)
df<-cbind(df,km=km.out$cluster)
plot(df,pch=10, col=1:3,cex=1.5)
#table(true=df,clus=df$km)
newiris<-iris
newiris
newiris$Species<-NULL
km.out<-kmeans(df,3,nstart=20)
df<-cbind(df,km=km.out$cluster)
table(iris$Species)
table(iris$Species,km.out$cluster)
table(iris$Species,km.out$cluster)
set.seed(2)
set.seed(2)
newiris<-iris
newiris
newiris$Species<-NULL
km.out<-kmeans(df,3,nstart=20)
table(iris$Species,km.out$cluster)
table(iris$Species,km.out$cluster)
set.seed(1)
samp<-sample(1:150, 40)
newiris
head(newiris)
smalliris<-newiris[samp,]
head(newiris)
smalliris<-newiris[samp,]
km.out<-kmeans(df,3,nstart=20)
table(iris$Species,km.out$cluster)
dist<-dist(smalliris)
hc.comp<-hclust(dist(smalliris),method="complete")
plot(hc.comp,hang=-1,labels=iris$Species[samp])
groups<-cutree(hc.comp,k=3)
plot(hc.comp,hang=-1,labels=iris$Species[samp])
groups<-cutree(hc.comp,k=3)
table(clusters=groups,true=iris$Species[samp])
set.seed(1)
samp<-sample(1:150, 40)
smalliris<-newiris[samp,]
dist<-dist(smalliris)
hc.comp<-hclust(dist(smalliris),method="average")
plot(hc.comp,hang=-1,labels=iris$Species[samp])
groups<-cutree(hc.comp,k=3)
table(clusters=groups,true=iris$Species[samp])
set.seed(1)
samp<-sample(1:150, 40)
smalliris<-newiris[samp,]
dist<-dist(smalliris)
hc.comp<-hclust(dist(smalliris),method="single")
plot(hc.comp,hang=-1,labels=iris$Species[samp])
groups<-cutree(hc.comp,k=3)
table(clusters=groups,true=iris$Species[samp])
km.out<-kmeans(df,3,nstart=20)
table(iris$Species,km.out$cluster)
set.seed(1)
samp<-sample(1:150, 150)
smalliris<-newiris[samp,]
dist<-dist(smalliris)
hc.comp<-hclust(dist(smalliris),method="complete")
plot(hc.comp,hang=-1,labels=iris$Species[samp])
groups<-cutree(hc.comp,k=3)
table(clusters=groups,true=iris$Species[samp])
